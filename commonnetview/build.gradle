apply plugin: 'com.android.library'
// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
android {
    compileSdkVersion 27



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

// 项目引用的版本号，比如compile
// 'com.zhudi.commonnetview:commonnetview:1.0.0'中的1.0.0就是这里配置的。
version = "1.0.0"

// 项目的主页
def siteUrl = 'https://github.com/506967734/commonNetView'
// Git仓库的url
def gitUrl = 'https://github.com/506967734/commonNetView.git'
// 唯一包名，比如compile 'com.zhudi.commonnetview:commonnetview:1.0.0'中的     com.zhudi.commonnetview就是这里配置的。
group = "com.zhudi.commonnetview"
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                //项目名称
                name 'library'
                //项目描述
                description '网络加载及异常无数据View'
                // 项目主页
                url siteUrl
                // 软件开源协议，现在一般都是Apache License2.0吧
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'zhudi'     // 开发者的id
                        name 'zhudi'   // 开发者名字。
                        email 'zhudi19911109@gmail.com' // 开发者邮箱。
                    }
                }
                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user") // Bintray的用户名。
    key = properties.getProperty("bintray.apikey") // Bintray的ApiKey。
    configurations = ['archives']
    pkg {
        userOrg = "zdzd" // Bintray的用户名。
        repo = "maven" // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图。）
        name = "netView"   // 发布到Bintray上的项目名字，这里的名字是compile 'com.zhudi.commonnetview:commonnetview:1.0.0'中的后面的commonnetview。
        userOrg = 'bintray_user' // Bintray的用户名。
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目
    }
}
javadoc { //jav doc采用utf-8编码否则会报“GBK的不可映射字符”错误
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
    }
}
